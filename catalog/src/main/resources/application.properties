spring.application.name=catalog
server.port=${PORT}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database=postgresql
spring.datasource.url=jdbc:postgresql://catalog-postgres:${CONTAINER_CATALOG_PG_PORT}/${CATALOG_DATABASE}?createDatabaseIfNotExist=true
spring.datasource.username=${CATALOG_PG_USER}
spring.datasource.password=${CATALOG_PG_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
grpc.client.uid-generator.address=dns:///${UID_GENERATOR_HOST}:${UID_GENERATOR_PORT}
grpc.client.uid-generator.address.host=${UID_GENERATOR_HOST}
grpc.client.uid-generator.address.port=${UID_GENERATOR_PORT}
grpc.client.uid-generator.negotiation-type=plaintext
grpc.client.uid-generator.enable-keep-alive=true
grpc.client.uid-generator.keep-alive-without-calls=true
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://auth-server:${AUTH_PORT}/realms/ecommerce/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://auth-server:${AUTH_PORT}/realms/ecommerce

keycloak.auth-server-url=http://auth-server:${AUTH_PORT}
keycloak.realm=${KEYCLOAK_REALM}
keycloak.username=${KEYCLOAK_ADMIN}
keycloak.password=${KEYCLOAK_ADMIN_PASSWORD}

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://auth-server:${AUTH_PORT}/realms/ecommerce
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.provider=${KEYCLOAK_PROVIDER}
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT_ID}

eureka.client.serviceUrl.defaultZone=${SERVICE_DISCOVERY_DEFAULTZONE}
eureka.instance.preferIpAddress=true